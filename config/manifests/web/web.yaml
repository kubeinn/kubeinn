# NodePort is for exposing to external traffic
apiVersion: v1
kind: Service
metadata:
  name: web-node-port-service
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30000
  selector:
    component: web
---
apiVersion: v1
kind: Service
metadata:
  name: web-cluster-ip-service
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    component: web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: web
  template:
    metadata:
      labels:
        component: web
    spec:
      serviceAccountName: service-account
      containers:
        - name: web
          image: jordan396/kubeinn-web
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: PGTURL
              value: $(POSTGREST_CLUSTER_IP_SERVICE)
            - name: PGTPORT
              valueFrom:
                configMapKeyRef:
                  name: backend-conf
                  key: PGTPORT
            - name: PROMETHEUS_URL
              value: $(PROMETHEUS_CLUSTER_IP_SERVICE)
            - name: PROMETHEUS_PORT
              valueFrom:
                configMapKeyRef:
                  name: backend-conf
                  key: PROMETHEUS_PORT
            - name: PGHOST
              value: $(POSTGRES_CLUSTER_IP_SERVICE)
            - name: PGUSER
              valueFrom:
                configMapKeyRef:
                  name: postgres-conf
                  key: PGUSER
            - name: PGPORT
              valueFrom:
                configMapKeyRef:
                  name: postgres-conf
                  key: PGPORT
            - name: PGDATABASE
              valueFrom:
                configMapKeyRef:
                  name: postgres-conf
                  key: PGDATABASE
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgpassword
                  key: POSTGRES_PASSWORD
            - name: JWT_SIGNING_KEY
              valueFrom:
                secretKeyRef:
                  name: jwt-signing-key
                  key: JWT_SIGNING_KEY
          volumeMounts:
            - name: backend-volume
              mountPath: "/root/.kube"
      volumes:
        - name: backend-volume
          configMap:
            name: backend-kube-conf
